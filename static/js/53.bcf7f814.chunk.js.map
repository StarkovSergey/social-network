{"version":3,"file":"static/js/53.bcf7f814.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?962c","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?42be","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?e370","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"ProfileInfo_profile__a3YBC\",\"profile-header\":\"ProfileInfo_profile-header__A0fJE\",\"description\":\"ProfileInfo_description__qJ90f\",\"name\":\"ProfileInfo_name__27joL\",\"photo\":\"ProfileInfo_photo__VwEQK\",\"contacts\":\"ProfileInfo_contacts__N8LSt\",\"contacts-list\":\"ProfileInfo_contacts-list__PEvVF\",\"title\":\"ProfileInfo_title__GfLC2\"};","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { ChangeEvent, FC, useState } from 'react'\n\ntype PropsType = {\n  status: string\n  updateStatus: (status: string) => void\n  id: number\n}\n\nexport const ProfileStatusWithHooks: FC<PropsType> = (props) => {\n  const [editMode, setEditMode] = useState(false)\n  const [status, setStatus] = useState(props.status)\n\n  const activateEditMode = () => {\n    setEditMode(true)\n  }\n  const deactivateEditMode = () => {\n    setEditMode(false)\n    props.updateStatus(status)\n  }\n  const inputChangeHandler = (evt: ChangeEvent<HTMLInputElement>) => {\n    setStatus(evt.currentTarget.value)\n  }\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onClick={activateEditMode}>{props.status ? props.status : 'empty status'}</span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input onBlur={deactivateEditMode} value={status} autoFocus onChange={inputChangeHandler} />\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport style from './ProfileInfo.module.css'\nimport { Loader } from '../../common/Loader/Loader'\nimport { ProfileType } from '../../../redux/profile-reducer'\nimport userPlaceholderPhoto from '../../../assets/images/user-placeholder.png'\nimport { ProfileStatusWithHooks } from './ProfileStatusWithHooks'\n\ntype PropsType = {\n  profile: ProfileType\n  status: string\n  updateStatus: (status: string) => void\n}\n\nexport const ProfileInfo = (props: PropsType) => {\n  if (!props.profile) {\n    return <Loader />\n  }\n\n  return (\n    <div className={style.profile}>\n      <div className={style['profile-header']}>\n        <img src=\"https://efi.int/sites/default/files/2020-12/placeholder.jpeg\" alt=\"\" width=\"1000\" height=\"400\"></img>\n      </div>\n      <div className={style.description}>\n        <div className={style.photo}>\n          <img src={props.profile.photos.large || userPlaceholderPhoto} alt={'user'} />\n        </div>\n        <b className={style.name}>{props.profile.fullName}</b>\n        <p>{props.profile.aboutMe}</p>\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} id={props.profile.userId} />\n      </div>\n      <div className={style.contacts}>\n        <h3 className={style.title}>Contacts</h3>\n        <ul className={style['contacts-list']}>\n          {Object.entries(props.profile.contacts).map((item, index) => {\n            return item[1] ? (\n              <li key={index}>\n                <a href={`${item[1]}`}>{item[0]}</a>\n              </li>\n            ) : (\n              ''\n            )\n          })}\n        </ul>\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"posts-box\":\"MyPosts_posts-box__HQBqi\",\"posts\":\"MyPosts_posts__Ttuld\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__2ddcJ\"};","import style from './Post.module.css';\n\ntype PostPropsType = {\n  message: string;\n  likesCount: number;\n  id: number\n}\n\nexport const Post = ({message, likesCount, ...props}: PostPropsType) => {\n  return (\n    <div className={style.item} id={String(props.id)}>\n      <img src=\"//unsplash.it/50/50\" alt=\"avatar\"/>\n      <p>{message}</p>\n      <span>like </span>{likesCount}\n    </div>\n  );\n};\n","import style from './MyPosts.module.css'\nimport { Post } from './Post/Post'\nimport React, { memo } from 'react'\nimport { MyPostsPropsType } from './MyPostsContainer'\nimport { Field, Form, Formik } from 'formik'\n\nexport const MyPosts = memo((props: MyPostsPropsType) => {\n  // TODO: memo не работает - приходят разные пропсы 3 раза. Стоит исправить!\n  const postsElements = props.posts.map((post) => (\n    <Post message={post.message} likesCount={post.likesCount} key={post.id} id={post.id} />\n  ))\n\n  const addPost = (values: FormDataType) => {\n    props.addPost(values.newPostText)\n  }\n\n  return (\n    <div className={style['posts-box']}>\n      <h3>posts</h3>\n      <div>\n        <AddPostForm onSubmit={addPost} />\n      </div>\n      <div className={style.posts}>{postsElements}</div>\n    </div>\n  )\n})\n\nconst AddPostForm: React.FC<{ onSubmit: (values: FormDataType) => void }> = (props) => {\n  return (\n    <Formik\n      initialValues={{\n        newPostText: '',\n      }}\n      validate={(values) => {\n        const errors: { newPostText?: string } = {}\n\n        if (!values.newPostText) {\n          errors.newPostText = 'Required'\n        }\n\n        return errors\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log(values)\n        props.onSubmit(values)\n        setSubmitting(false)\n      }}>\n      {({ isSubmitting, errors, touched }) => (\n        <Form>\n          <div>\n            <div>\n              <Field component=\"textarea\" name=\"newPostText\" placeholder=\"Enter your post...\" />\n            </div>\n          </div>\n          {errors.newPostText && touched.newPostText && errors.newPostText}\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Add post\n          </button>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\ntype FormDataType = {\n  newPostText: string\n}\n","import { addPost, ProfilePageType } from '../../../redux/profile-reducer'\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../../redux/store'\nimport { MyPosts } from './MyPosts'\n\ntype mapDispatchToPropsType = {\n  addPost: (newPost: string) => void;\n}\n\nexport type MyPostsPropsType = mapDispatchToPropsType & ProfilePageType;\n\nconst mapStateToProps = (state: AppStateType): ProfilePageType => {\n  return {\n    posts: state.profilePage.posts,\n    profile: state.profilePage.profile,\n    status: state.profilePage.status\n  };\n};\n\nexport const MyPostsContainer = connect(mapStateToProps, {\n  addPost,\n})(MyPosts);\n","import { ProfileInfo } from './ProfileInfo/ProfileInfo'\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer'\nimport { ProfilePropsType } from './ProfileContainer'\nimport React from 'react'\n\nexport const Profile = (props: ProfilePropsType) => {\n  return (\n    <div>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n      <MyPostsContainer />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Profile } from './Profile'\nimport { connect } from 'react-redux'\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profile-reducer'\nimport { AppStateType } from '../../redux/store'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { compose } from 'redux'\n\ntype MapDispatchToPropsType = {\n  getUserProfile: (id: string) => void\n  getStatus: (id: string) => void\n  updateStatus: (status: string) => void\n}\n\ntype PathParamsType = {\n  userId: string\n}\n\nexport type ProfilePropsType = MapDispatchToPropsType & ReturnType<typeof mapStateToProps>\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\n\nclass ProfileAPIContainer extends React.Component<PropsType> {\n  componentDidMount() {\n    let userId = this.props.match.params.userId\n    if (!userId) {\n      userId = this.props.authorizedUserId!\n    }\n    if (!userId) {\n      this.props.history.push('/login')\n    }\n\n    this.props.getUserProfile(userId)\n    this.props.getStatus(userId)\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  profile: state.profilePage.profile,\n  posts: state.profilePage.posts,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.id,\n})\n\nexport default compose<React.ComponentType>(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter\n  // withAuthRedirect\n)(ProfileAPIContainer)\n"],"names":["_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","onClick","onBlur","updateStatus","autoFocus","onChange","evt","currentTarget","ProfileInfo","profile","className","style","src","alt","width","height","photos","large","userPlaceholderPhoto","fullName","aboutMe","id","userId","Object","entries","contacts","map","item","index","href","Loader","Post","message","likesCount","String","MyPosts","memo","postsElements","posts","post","AddPostForm","onSubmit","values","addPost","newPostText","initialValues","validate","errors","setSubmitting","console","log","isSubmitting","touched","component","name","placeholder","type","disabled","MyPostsContainer","connect","state","profilePage","Profile","ProfileAPIContainer","this","match","params","authorizedUserId","history","getUserProfile","getStatus","React","compose","auth","withRouter"],"sourceRoot":""}