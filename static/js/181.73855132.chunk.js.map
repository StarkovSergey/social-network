{"version":3,"file":"static/js/181.73855132.chunk.js","mappings":"0KACA,GAAgB,QAAU,yBAAyB,eAAe,8BAA8B,OAAS,wBAAwB,cAAc,6BAA6B,OAAS,wBAAwB,gBAAgB,+BAA+B,OAAS,yB,8BCSxPA,EAA4C,SAACC,GACxD,IAAMC,EAAI,mBAAeD,EAAME,IAE/B,OACE,eAAIC,UAAS,UAAKC,EAAAA,QAAlB,UACE,UAAC,KAAD,CAASC,GAAIJ,EAAMK,gBAAiBF,EAAAA,OAAcD,UAAWC,EAAAA,eAA7D,WACE,gBAAKD,UAAWC,EAAAA,OAAhB,UACE,gBAAKG,IAAKP,EAAMQ,YAElB,0BAAOR,EAAMS,aCZRC,EAAsC,SAACV,GAClD,OAAO,eAAIG,UAAWC,EAAAA,QAAf,SAA+BJ,EAAMW,W,UCmBxCC,EAAuE,SAACZ,GAC5E,OACA,SAAC,KAAD,CACEa,cAAe,CACbC,eAAgB,IAElBC,SAAU,SAACC,GACT,IAAMC,EAAsC,GAM5C,OAJKD,EAAOF,iBACVG,EAAOH,eAAiB,YAGnBG,GAGTC,SAAU,SAACF,EAAD,GAAgC,IAArBG,EAAoB,EAApBA,cACnBC,QAAQC,IAAIL,GACZhB,EAAMkB,SAASF,GACfG,GAAc,IAjBlB,SAmBG,gBAAGG,EAAH,EAAGA,aAAcL,EAAjB,EAAiBA,OAAQM,EAAzB,EAAyBA,QAAzB,OACC,UAAC,KAAD,YACE,0BACE,gBAAKpB,UAAU,cAAf,UACE,SAAC,KAAD,CAAOqB,UAAU,WAAWf,KAAK,iBAAiBgB,YAAY,wBAAwBtB,UAAU,8BAGnGc,EAAOH,gBAAkBS,EAAQT,gBAAkBG,EAAOH,gBAE3D,mBAAQY,KAAK,SAASC,SAAUL,EAAhC,6B,mBCnCR,GAAeM,E,QAAAA,KAAuBC,EAAAA,EAAAA,KARd,SAACC,GACvB,MAAO,CACLC,QAASD,EAAME,YAAYD,QAC3BE,SAAUH,EAAME,YAAYC,SAC5BC,OAAQJ,EAAMK,KAAKD,UAIwC,CAAEE,WAAAA,EAAAA,IAAeC,EAAAA,EAAhF,EDfmD,SAACrC,GAClD,IAAMsC,EAAkBtC,EAAM+B,QAAQQ,KAAI,SAACC,GAAD,OACxC,SAACzC,EAAD,CAAYU,KAAM+B,EAAO/B,KAAMP,GAAIsC,EAAOtC,GAAIM,OAAQgC,EAAOhC,QAAagC,EAAOtC,OAG7EuC,EAAmBzC,EAAMiC,SAASM,KAAI,SAAC5B,GAAD,OAAkB,SAACD,EAAD,CAASC,QAASA,EAAQA,SAAcA,EAAQT,OAM9G,OACE,iBAAKC,UAAWC,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,gBAAf,SAAuCkC,KACvC,eAAInC,UAAWC,EAAAA,iBAAf,SAAwCqC,KACxC,SAAC7B,EAAD,CAAgBM,SARD,SAACF,GAClBhB,EAAMoC,WAAWpB,EAAOF","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?dc1e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__DtIRT\",\"dialogs-list\":\"Dialogs_dialogs-list__VBiFh\",\"dialog\":\"Dialogs_dialog__6NNSC\",\"dialog-link\":\"Dialogs_dialog-link__-HD2t\",\"active\":\"Dialogs_active__V+9i9\",\"messages-list\":\"Dialogs_messages-list__TsWK7\",\"avatar\":\"Dialogs_avatar__Jwkg0\"};","import style from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport React from 'react';\n\ntype DialogItemPropsType = {\n  name: string;\n  id: number;\n  avatar: string;\n};\n\nexport const DialogItem: React.FC<DialogItemPropsType> = (props) => {\n  const path = `/dialogs/${props.id}`;\n\n  return (\n    <li className={`${style.dialog}`}>\n      <NavLink to={path} activeClassName={style.active} className={style['dialog-link']}>\n        <div className={style.avatar}>\n          <img src={props.avatar}/>\n        </div>\n        <span>{props.name}</span>\n      </NavLink>\n    </li>\n  );\n};\n","import style from \"./../Dialogs.module.css\";\nimport React from 'react';\n\ntype MessagePropsType = {\n  message: string;\n};\n\nexport const Message: React.FC<MessagePropsType> = (props) => {\n  return <li className={style.message}>{props.message}</li>;\n};\n","import style from './Dialogs.module.css'\nimport { DialogItem } from './DialogItem/DialogItem'\nimport { Message } from './Message/Message'\nimport React from 'react'\nimport { DialogsPropsType } from './DialogsContainer'\nimport { Field, Form, Formik } from 'formik'\n\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\n  const dialogsElements = props.dialogs.map((dialog: any) => (\n    <DialogItem name={dialog.name} id={dialog.id} avatar={dialog.avatar} key={dialog.id} />\n  ))\n\n  const messagesElements = props.messages.map((message: any) => <Message message={message.message} key={message.id} />)\n\n  const addMessage = (values: FormDataType) => {\n    props.addMessage(values.newMessageText)\n  }\n\n  return (\n    <div className={style.dialogs}>\n      <ul className={style['dialogs-list']}>{dialogsElements}</ul>\n      <ul className={style['messages-list']}>{messagesElements}</ul>\n      <AddMessageForm onSubmit={addMessage} />\n    </div>\n  )\n}\n\nconst AddMessageForm: React.FC<{onSubmit: (values: FormDataType) => void}> = (props) => {\n  return (\n  <Formik\n    initialValues={{\n      newMessageText: '',\n    }}\n    validate={(values) => {\n      const errors: { newMessageText?: string } = {}\n\n      if (!values.newMessageText) {\n        errors.newMessageText = 'Required'\n      }\n\n      return errors\n    }}\n\n    onSubmit={(values, { setSubmitting }) => {\n      console.log(values)\n      props.onSubmit(values)\n      setSubmitting(false)\n    }}>\n    {({ isSubmitting, errors, touched }) => (\n      <Form>\n        <div>\n          <div className=\"new-message\">\n            <Field component=\"textarea\" name=\"newMessageText\" placeholder=\"Enter your message...\" className=\"new-message__textarea\" />\n          </div>\n        </div>\n        {errors.newMessageText && touched.newMessageText && errors.newMessageText}\n\n        <button type=\"submit\" disabled={isSubmitting}>\n          Add post\n        </button>\n      </Form>\n    )}\n  </Formik>\n  )\n}\n\n\n\ntype FormDataType = {\n  newMessageText: string\n}\n","import { addMessage, DialogsPageType } from '../../redux/dialogs-reducer'\nimport { Dialogs } from './Dialogs'\nimport { connect } from 'react-redux'\nimport { AppStateType } from '../../redux/store'\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\nimport { compose } from 'redux'\nimport { ComponentType } from 'react'\n\ntype MapDispatchToPropsReturnType = {\n  addMessage: (newMessageText: string) => void\n}\n\nexport type DialogsPropsType = MapDispatchToPropsReturnType & DialogsPageType & { isAuth: boolean }\n\nconst mapStateToProps = (state: AppStateType): DialogsPageType & { isAuth: boolean } => {\n  return {\n    dialogs: state.dialogsPage.dialogs,\n    messages: state.dialogsPage.messages,\n    isAuth: state.auth.isAuth,\n  }\n}\n\nexport default compose<ComponentType>(connect(mapStateToProps, { addMessage }), withAuthRedirect)(Dialogs)\n// compose - функция из Redux. Смысл: возьми Dialogs, передай в withAuthRedirect, затем результат передай в следующую функцию ()\n"],"names":["DialogItem","props","path","id","className","style","to","activeClassName","src","avatar","name","Message","message","AddMessageForm","initialValues","newMessageText","validate","values","errors","onSubmit","setSubmitting","console","log","isSubmitting","touched","component","placeholder","type","disabled","compose","connect","state","dialogs","dialogsPage","messages","isAuth","auth","addMessage","withAuthRedirect","dialogsElements","map","dialog","messagesElements"],"sourceRoot":""}