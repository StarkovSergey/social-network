{"version":3,"file":"static/js/486.93459e64.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?962c","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?42be","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?e370","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"ProfileInfo_profile__a3YBC\",\"profile-header\":\"ProfileInfo_profile-header__A0fJE\",\"description\":\"ProfileInfo_description__qJ90f\",\"name\":\"ProfileInfo_name__27joL\",\"photo\":\"ProfileInfo_photo__VwEQK\",\"contacts\":\"ProfileInfo_contacts__N8LSt\",\"contacts-list\":\"ProfileInfo_contacts-list__PEvVF\",\"title\":\"ProfileInfo_title__GfLC2\",\"characteristics\":\"ProfileInfo_characteristics__J1wHn\"};","import React, { ChangeEvent, FC, useState } from 'react'\r\n\r\ntype PropsType = {\r\n  status: string\r\n  updateStatus: (status: string) => void\r\n  id: number\r\n}\r\n\r\nexport const ProfileStatusWithHooks: FC<PropsType> = (props) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n  const inputChangeHandler = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(evt.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onClick={activateEditMode}>{props.status ? props.status : 'empty status'}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input onBlur={deactivateEditMode} value={status} autoFocus onChange={inputChangeHandler} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { ContactsType, ProfileType } from '../../../../redux/profile-reducer'\r\nimport style from '../ProfileInfo.module.css'\r\nimport React from 'react'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport { SetStatus } from '../../../Login/LoginFormik'\r\n\r\ntype PropsType = {\r\n  profile: ProfileType\r\n  inactiveEditMode: () => void\r\n  saveProfile: (formData: FormData, setStatus: SetStatus) => Promise<any>\r\n}\r\n\r\nexport type FormData = {\r\n  fullName: string\r\n  lookingForAJOB: boolean\r\n  lookingForAJobDescription: string\r\n  aboutMe: string\r\n}\r\n\r\nexport const ProfileDataForm = ({ profile, saveProfile, inactiveEditMode }: PropsType) => {\r\n  const contactValues = { ...profile!.contacts }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        fullName: profile!.fullName,\r\n        lookingForAJOB: profile!.lookingForAJob,\r\n        lookingForAJobDescription: profile!.lookingForAJobDescription,\r\n        aboutMe: profile!.aboutMe,\r\n        contacts: {\r\n          ...contactValues,\r\n        },\r\n      }}\r\n      validate={(values) => {}}\r\n      onSubmit={(values, submitProps) => {\r\n        saveProfile(values, submitProps.setStatus).then((res) => {\r\n          inactiveEditMode()\r\n        })\r\n      }}>\r\n      {({ errors, handleChange, touched, status, values }) => (\r\n        <Form>\r\n          <button>save</button>\r\n          <div>\r\n            <b>Full name</b>:\r\n            <Field type=\"text\" name=\"fullName\" autocompleted=\"off\" />\r\n            {errors.fullName && touched.fullName && errors.fullName}\r\n          </div>\r\n          <div>\r\n            <b>Looking for a job</b>:\r\n            <Field type=\"checkbox\" name=\"lookingForAJOB\" autocompleted=\"off\" />\r\n            {errors.lookingForAJOB && touched.lookingForAJOB && errors.lookingForAJOB}\r\n          </div>\r\n          <div>\r\n            <b>Skills</b>:\r\n            <Field type=\"text\" name=\"lookingForAJobDescription\" autocompleted=\"off\" />\r\n            {errors.lookingForAJobDescription && touched.lookingForAJobDescription && errors.lookingForAJobDescription}\r\n          </div>\r\n          <div>\r\n            <b>About me</b>:\r\n            <Field type=\"text\" name=\"aboutMe\" autocompleted=\"off\" />\r\n            {errors.aboutMe && touched.aboutMe && errors.aboutMe}\r\n          </div>\r\n\r\n          <div className={style.contacts}>\r\n            <h3 className={style.title}>Contacts</h3>\r\n            <ul className={style['contacts-list']}>\r\n              {Object.entries(profile!.contacts).map(([title, link], index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <b>{title}</b>:\r\n                    <input\r\n                      id=\"title\"\r\n                      name={`contacts.${title}`}\r\n                      type=\"text\"\r\n                      onChange={handleChange}\r\n                      value={values.contacts[title as keyof ContactsType] || ''}\r\n                    />\r\n                  </div>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n\r\n          <p>{status && status.error[0]}</p>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport style from './ProfileInfo.module.css'\r\nimport { Loader } from '../../common/Loader/Loader'\r\nimport { ProfileType } from '../../../redux/profile-reducer'\r\nimport userPlaceholderPhoto from '../../../assets/images/user-placeholder.png'\r\nimport { ProfileStatusWithHooks } from './ProfileStatusWithHooks'\r\nimport { FormData, ProfileDataForm } from './ProfileDataForm/ProfileDataForm'\r\nimport { SetStatus } from '../../Login/LoginFormik'\r\n\r\ntype PropsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  isOwner: boolean\r\n  updateStatus: (status: string) => void\r\n  savePhoto: (photo: File) => void\r\n  saveProfile: (formData: FormData, setStatus: SetStatus) => Promise<any>\r\n}\r\n\r\nexport const ProfileInfo = (props: PropsType) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const activeEditMode = () => setEditMode(true)\r\n  const inactiveEditMode = () => setEditMode(false)\r\n\r\n  if (!props.profile) {\r\n    return <Loader />\r\n  }\r\n\r\n  const mainPhotoHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.files?.length) {\r\n      props.savePhoto(e.currentTarget.files[0])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={style.profile}>\r\n      <div className={style['profile-header']}>\r\n        <img src=\"https://efi.int/sites/default/files/2020-12/placeholder.jpeg\" alt=\"\" width=\"1000\" height=\"400\"></img>\r\n      </div>\r\n      <div className={style.description}>\r\n        <div className={style.photo}>\r\n          <img src={props.profile.photos.large || userPlaceholderPhoto} alt={'user'} />\r\n        </div>\r\n        {props.isOwner && <input type=\"file\" onChange={mainPhotoHandler} />}\r\n\r\n        <b className={style.name}>{props.profile.fullName}</b>\r\n        <p>{props.profile.aboutMe}</p>\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} id={props.profile.userId} />\r\n      </div>\r\n\r\n      {editMode ? (\r\n        <ProfileDataForm profile={props.profile} saveProfile={props.saveProfile} inactiveEditMode={inactiveEditMode} />\r\n      ) : (\r\n        <ProfileData profile={props.profile} isOwner={props.isOwner} activeEditMode={activeEditMode} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\ntype ContactProps = {\r\n  title: string\r\n  link: string\r\n}\r\n\r\nexport const Contact = ({ title, link }: ContactProps) => {\r\n  return (\r\n    <li>\r\n      <a href={link}>{title}</a>\r\n    </li>\r\n  )\r\n}\r\n\r\ntype ProfileDataProps = {\r\n  profile: ProfileType\r\n  isOwner: boolean\r\n  activeEditMode: () => void\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, activeEditMode }: ProfileDataProps) => {\r\n  return (\r\n    <>\r\n      <div className={style.characteristics}>\r\n        {isOwner && <button onClick={activeEditMode}>edit</button>}\r\n        <div>\r\n          <b>Full name</b>: {profile!.fullName}\r\n        </div>\r\n        <div>\r\n          <b>Looking for a job</b>: {profile!.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        <div>\r\n          <b>Skills</b>: {profile!.lookingForAJobDescription}\r\n        </div>\r\n        <div>\r\n          <b>About me</b>: {profile!.aboutMe}\r\n        </div>\r\n      </div>\r\n      <div className={style.contacts}>\r\n        <h3 className={style.title}>Contacts</h3>\r\n        <ul className={style['contacts-list']}>\r\n          {Object.entries(profile!.contacts).map(([title, link], index) => {\r\n            return <Contact key={index} title={title} link={link} />\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts-box\":\"MyPosts_posts-box__HQBqi\",\"posts\":\"MyPosts_posts__Ttuld\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__2ddcJ\"};","import style from './Post.module.css';\r\n\r\ntype PostPropsType = {\r\n  message: string;\r\n  likesCount: number;\r\n  id: number\r\n}\r\n\r\nexport const Post = ({message, likesCount, ...props}: PostPropsType) => {\r\n  return (\r\n    <div className={style.item} id={String(props.id)}>\r\n      <img src=\"//unsplash.it/50/50\" alt=\"avatar\"/>\r\n      <p>{message}</p>\r\n      <span>like </span>{likesCount}\r\n    </div>\r\n  );\r\n};\r\n","import style from './MyPosts.module.css'\r\nimport { Post } from './Post/Post'\r\nimport React, { memo } from 'react'\r\nimport { MyPostsPropsType } from './MyPostsContainer'\r\nimport { Field, Form, Formik } from 'formik'\r\n\r\nexport const MyPosts = memo((props: MyPostsPropsType) => {\r\n  // TODO: memo не работает - приходят разные пропсы 3 раза. Стоит исправить!\r\n  const postsElements = props.posts.map((post) => (\r\n    <Post message={post.message} likesCount={post.likesCount} key={post.id} id={post.id} />\r\n  ))\r\n\r\n  const addPost = (values: FormDataType) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={style['posts-box']}>\r\n      <h3>posts</h3>\r\n      <div>\r\n        <AddPostForm onSubmit={addPost} />\r\n      </div>\r\n      <div className={style.posts}>{postsElements}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst AddPostForm: React.FC<{ onSubmit: (values: FormDataType) => void }> = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        newPostText: '',\r\n      }}\r\n      validate={(values) => {\r\n        const errors: { newPostText?: string } = {}\r\n\r\n        if (!values.newPostText) {\r\n          errors.newPostText = 'Required'\r\n        }\r\n\r\n        return errors\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        console.log(values)\r\n        props.onSubmit(values)\r\n        setSubmitting(false)\r\n      }}>\r\n      {({ isSubmitting, errors, touched }) => (\r\n        <Form>\r\n          <div>\r\n            <div>\r\n              <Field component=\"textarea\" name=\"newPostText\" placeholder=\"Enter your post...\" />\r\n            </div>\r\n          </div>\r\n          {errors.newPostText && touched.newPostText && errors.newPostText}\r\n\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Add post\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\ntype FormDataType = {\r\n  newPostText: string\r\n}\r\n","import { addPost, ProfilePageType } from '../../../redux/profile-reducer'\r\nimport { connect } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store'\r\nimport { MyPosts } from './MyPosts'\r\n\r\ntype mapDispatchToPropsType = {\r\n  addPost: (newPost: string) => void;\r\n}\r\n\r\nexport type MyPostsPropsType = mapDispatchToPropsType & ProfilePageType;\r\n\r\nconst mapStateToProps = (state: AppStateType): ProfilePageType => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n  };\r\n};\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPosts);\r\n","import { ProfileInfo } from './ProfileInfo/ProfileInfo'\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer'\r\nimport { ProfilePropsType } from './ProfileContainer'\r\nimport React from 'react'\r\n\r\nexport const Profile = (props: ProfilePropsType) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Profile } from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { getStatus, getUserProfile, savePhoto, saveProfile, updateStatus } from '../../redux/profile-reducer'\r\nimport { AppStateType } from '../../redux/store'\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { FormData } from './ProfileInfo/ProfileDataForm/ProfileDataForm'\r\nimport { SetStatus } from '../Login/LoginFormik'\r\n\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\n\r\nexport type ProfilePropsType = MapDispatchToPropsType &\r\n  ReturnType<typeof mapStateToProps> & {\r\n    isOwner: boolean\r\n  }\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileAPIContainer extends React.Component<PropsType> {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId!\r\n    }\r\n    if (!userId) {\r\n      this.props.history.push('/login')\r\n    }\r\n\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<PropsType>) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!Boolean(this.props.match.params.userId)}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        saveProfile={this.props.saveProfile}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n  profile: state.profilePage.profile,\r\n  posts: state.profilePage.posts,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n})\r\n\r\ntype MapDispatchToPropsType = {\r\n  getUserProfile: (id: string) => void\r\n  getStatus: (id: string) => void\r\n  updateStatus: (status: string) => void\r\n  savePhoto: (photo: File) => void\r\n  saveProfile: (profileForm: FormData, setStatus: SetStatus) => Promise<any>\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter\r\n  // withAuthRedirect\r\n)(ProfileAPIContainer)\r\n"],"names":["_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","onClick","onBlur","updateStatus","autoFocus","onChange","evt","currentTarget","ProfileDataForm","profile","saveProfile","inactiveEditMode","contactValues","contacts","initialValues","fullName","lookingForAJOB","lookingForAJob","lookingForAJobDescription","aboutMe","validate","values","onSubmit","submitProps","then","res","errors","handleChange","touched","type","name","autocompleted","className","style","Object","entries","map","index","title","id","error","ProfileInfo","Loader","src","alt","width","height","photos","large","userPlaceholderPhoto","isOwner","e","files","savePhoto","userId","ProfileData","activeEditMode","Contact","link","href","Post","message","likesCount","String","MyPosts","memo","postsElements","posts","post","AddPostForm","addPost","newPostText","setSubmitting","console","log","isSubmitting","component","placeholder","disabled","MyPostsContainer","connect","state","profilePage","Profile","ProfileAPIContainer","this","match","params","authorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","Boolean","React","compose","auth","withRouter"],"sourceRoot":""}