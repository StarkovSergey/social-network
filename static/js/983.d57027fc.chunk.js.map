{"version":3,"file":"static/js/983.d57027fc.chunk.js","mappings":"mMACA,EAAgC,6B,oBCSnBA,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,OACE,SAAC,KAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,YAAY,GAEdC,SAAU,SAACC,GACT,IAAMC,EAAgD,GAYtD,OAVKD,EAAOJ,MAEA,2CAA2CM,KAAKF,EAAOJ,SACjEK,EAAOL,MAAQ,yBAFfK,EAAOL,MAAQ,WAKbI,EAAOH,SAASM,OAAS,IAC3BF,EAAOJ,SAAW,mBAGbI,GAETP,SAAU,SAACM,EAAQI,GACjBV,EAASM,EAAQI,EAAYC,YAtBjC,SAwBG,cAAGC,aAAH,IAAiBL,EAAjB,EAAiBA,OAAQM,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,OAAlC,OACC,UAAC,KAAD,YACE,4BACE,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQC,YAAY,QAAQC,cAAc,QAClEX,EAAOL,OAASW,EAAQX,OAASK,EAAOL,UAG3C,4BACE,SAAC,KAAD,CAAOa,KAAK,WAAWC,KAAK,WAAWC,YAAY,aAClDV,EAAOJ,UAAYU,EAAQV,UAAYI,EAAOJ,aAGjD,8BACE,SAAC,KAAD,CAAOY,KAAK,WAAWC,KAAK,eAD9B,kBAIA,mBAAQD,KAAK,SAAb,qBACA,uBAAID,GAAUA,EAAOK,MAAM,Y,4BCvCxBC,EAAwB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAKtC,OAL0D,EAAbC,QAMpC,SAAC,KAAD,CAAUC,GAAI,cAIrB,iBAAKC,UAAWC,EAAhB,WACE,mCAEA,SAAC1B,EAAD,CAAaC,SAZA,SAACM,EAAsBK,GACtCU,EAAMf,EAAQK,UAwBlB,GAAee,EAAAA,EAAAA,KAJS,SAACC,GAAD,MAA0B,CAChDL,OAAQK,EAAMC,KAAKN,UAGmB,CACtCD,MAAAA,EAAAA,IADF,CAEGD","sources":["webpack://samurai-way/./src/components/Login/Login.module.css?0ede","components/Login/LoginFormik.tsx","components/Login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login-section\":\"Login_login-section__Wp+hz\",\"form\":\"Login_form__lMM6E\"};","import { Field, Form, Formik } from 'formik'\nimport React, { FC } from 'react'\nimport { FormDataType } from './Login'\n\nexport type SetStatus = (status?: any) => void\n\ntype PropsType = {\n  onSubmit: (value: FormDataType, setStatus: SetStatus) => void\n}\n\nexport const LoginFormik: FC<PropsType> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        rememberMe: false,\n      }}\n      validate={(values) => {\n        const errors: { email?: string; password?: string } = {}\n\n        if (!values.email) {\n          errors.email = 'Required'\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address'\n        }\n\n        if (values.password.length < 4) {\n          errors.password = 'Min length is 4'\n        }\n\n        return errors\n      }}\n      onSubmit={(values, submitProps) => {\n        onSubmit(values, submitProps.setStatus)\n      }}>\n      {({ isSubmitting, errors, touched, status }) => (\n        <Form>\n          <div>\n            <Field type=\"email\" name=\"email\" placeholder=\"email\" autocompleted=\"off\" />\n            {errors.email && touched.email && errors.email}\n          </div>\n\n          <div>\n            <Field type=\"password\" name=\"password\" placeholder=\"password\" />\n            {errors.password && touched.password && errors.password}\n          </div>\n\n          <label>\n            <Field type=\"checkbox\" name=\"rememberMe\" />\n            Remember me\n          </label>\n          <button type=\"submit\">Submit</button>\n          <p>{status && status.error[0]}</p>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n","import React, { FC } from 'react'\nimport style from './Login.module.css'\nimport { LoginFormik, SetStatus } from './LoginFormik'\nimport { connect } from 'react-redux'\nimport { login } from '../../redux/auth-reducer'\nimport { AppStateType } from '../../redux/store'\nimport { Redirect } from 'react-router-dom'\n\nexport type FormDataType = {\n  email: string\n  password: string\n  rememberMe: boolean\n}\n\nexport const Login: FC<LoginProps> = ({ login, isAuth }) => {\n  const onSubmit = (values: FormDataType, setStatus: SetStatus) => {\n    login(values, setStatus)\n  }\n\n  if (isAuth) {\n    return <Redirect to={'/profile'} />\n  }\n\n  return (\n    <div className={style['login-section']}>\n      <h1>Login</h1>\n\n      <LoginFormik onSubmit={onSubmit} />\n    </div>\n  )\n}\n\ntype LoginProps = {\n  login: (param: FormDataType, setStatus: any) => void\n} & ReturnType<typeof mapStateToProps>\n\nconst mapStateToProps = (state: AppStateType) => ({\n  isAuth: state.auth.isAuth,\n})\n\nexport default connect(mapStateToProps, {\n  login,\n})(Login)\n"],"names":["LoginFormik","onSubmit","initialValues","email","password","rememberMe","validate","values","errors","test","length","submitProps","setStatus","isSubmitting","touched","status","type","name","placeholder","autocompleted","error","Login","login","isAuth","to","className","style","connect","state","auth"],"sourceRoot":""}